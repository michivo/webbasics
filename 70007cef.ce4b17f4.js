(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{157:function(e,n,i){"use strict";i.r(n),i.d(n,"frontMatter",(function(){return s})),i.d(n,"metadata",(function(){return l})),i.d(n,"rightToc",(function(){return o})),i.d(n,"default",(function(){return c}));var r=i(2),t=i(9),a=(i(0),i(187)),s={id:"mime-list",title:"Einige der wichtigsten Media Types f\xfcr das Web",sidebar_label:"Die wichtigsten Typen"},l={id:"mime-list",title:"Einige der wichtigsten Media Types f\xfcr das Web",description:"Wie schon erw\xe4hnt gibt es \xfcber 1400 von der IANA gelistete Media Types, einige der f\xfcr das Web relevantesten Typen sind hier aufgef\xfchrt:",source:"@site/docs/mime_examples.md",permalink:"/webbasics/docs/mime-list",editUrl:"https://github.com/michivo/webbasics/edit/master/website/docs/mime_examples.md",sidebar_label:"Die wichtigsten Typen",sidebar:"someSidebar",previous:{title:"Media Types - Datenformate",permalink:"/webbasics/docs/mime-intro"},next:{title:"Das Document Object Model",permalink:"/webbasics/docs/dom-intro"}},o=[{value:"Bilder",id:"bilder",children:[{value:"Rastergrafiken",id:"rastergrafiken",children:[]},{value:"Vektorgrafiken",id:"vektorgrafiken",children:[]}]},{value:"Text",id:"text",children:[]},{value:"MIME-Sniffing",id:"mime-sniffing",children:[]}],d={rightToc:o};function c(e){var n=e.components,i=Object(t.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},d,i,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Wie schon erw\xe4hnt gibt es \xfcber 1400 von der IANA gelistete Media Types, einige der f\xfcr das Web relevantesten Typen sind hier aufgef\xfchrt:"),Object(a.b)("h2",{id:"bilder"},"Bilder"),Object(a.b)("p",null,"Es gibt ja zahlreiche Bildformate (PNG, GIF, JPEG, ...), die jeweils unterschiedliche Vor- und Nachteile haben. Es gibt daher nicht ein ",Object(a.b)("em",{parentName:"p"},"bestes Bildformat")," f\xfcr alle Anwendungsf\xe4lle. Eine prinzipielle Unterscheidung ist bei Grafikformaten zwischen Raster- und Vektorgrafiken zu treffen. Rastergrafiken bestehen aus einer rasterf\xf6rmigen Anordnung von Pixeln, denen jeweils eine Farbe zugeordnet ist. Im Gegensatz dazu stehen Vektorgrafiken, die aus grafischen Elementen wie Linien, Kurven, Polygonen und Kreisen bestehen."),Object(a.b)("h3",{id:"rastergrafiken"},"Rastergrafiken"),Object(a.b)("p",null,"Rastergrafiken eignen sich vor allem zur Darstellung komplexer Bilder wie Fotos, die nicht mit Vektorgrafiken beschreibbar sind. Die g\xe4ngigsten Rastergrafikformate sind:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"JPEG (",Object(a.b)("inlineCode",{parentName:"li"},"image/jpeg"),") eignet sich gut f\xfcr Fotos und \xe4hnlich komplexe Bilder mit vielen Farben und detailreichen Strukturen. JPEG erlaubt es, solche Bilder mit relativ hoher Kompression zu speichern. JPEG ist aber verlustbehaftet, d.h. ein mit JPEG gespeichertes Bild unterscheidet sich doch qualitativ von einem Originalbild. Je h\xf6her die Kompressionsrate, desto eher sind solche Qualit\xe4tsunterschiede auch mit dem menschlichen Auge wahrnehmber."),Object(a.b)("li",{parentName:"ul"},"PNG (",Object(a.b)("inlineCode",{parentName:"li"},"image/png"),") eignet sich gut f\xfcr Icons, Logos, Diagramme und fl\xe4chige Grafiken mit einer \xfcberschaubaren Anzahl an Farben. PNGs unterst\xfctzen auch Transparenz. Je nach Art des Bildes erreicht man bei PNGs teils bessere, teils schlechtere Kompressionsraten - je komplexer aber das Bild, desto eher ist die Kompression mit JPEG besser. Die PNG-Kompression ist daf\xfcr im Gegensatz zu JPEG verlustfrei."),Object(a.b)("li",{parentName:"ul"},"ICO (",Object(a.b)("inlineCode",{parentName:"li"},"image/x-icon"),") ist das bevorzugte Format f\xfcr Icons. ICO-Dateien k\xf6nnen auch mehrere Einzelbilder in unterschiedlichen Aufl\xf6sungen enthalten. Das ICO-Format wird h\xe4ufig f\xfcr das sogenannte ",Object(a.b)("strong",{parentName:"li"},"Favicon")," verwendet, das von Browser in den Browser-Tabs zur Identifizierung von Webseiten verwendet wird."),Object(a.b)("li",{parentName:"ul"},"GIF (",Object(a.b)("inlineCode",{parentName:"li"},"image/gif"),") ist \xe4hnlich wie PNG ein verlustfreies Grafikformat, das sich f\xfcr einfache Grafiken mit wenigen Farben eignet. GIF unterst\xfctzt au\xdferdem Animationen, ansonsten ist PNG jedoch GIF in beinahe allen F\xe4llen \xfcberlegen. F\xfcr animierte PNGs gibt es ",Object(a.b)("inlineCode",{parentName:"li"},"image/apng"),", das GIFs ebenfalls \xfcberlegen ist."),Object(a.b)("li",{parentName:"ul"},"WebP (",Object(a.b)("inlineCode",{parentName:"li"},"image/webp"),") ist ein von Google entwickeltes Grafikformat, das die Vorteile von JPEG, GIF und PNG kombinieren soll: Verlustfreie und verlustbehaftete Kompression, Transparenz und Unterst\xfctzung von Animationen bei besseren Kompressionsraten als bei JPEG und PNG. Die Unterst\xfctzung von WebP in Browsern ist erst seit kurzem durchg\xe4ngig gegeben (Firefox seit 2019, Safari seit 2020, Chrome und Edge schon l\xe4nger), es gibt auch noch viele Grafikprogramme, die WebP noch nicht unterst\xfctzen. Derzeit ist aber davon auszugehen, dass WebP das Grafikformat der Zukunft im Webbereich sein wird.")),Object(a.b)("p",null,"Von der Verwendung von unkomprimierten Bitmaps (",Object(a.b)("inlineCode",{parentName:"p"},"image/bmp"),") sollte im Web abgesehen werden, da unkomprimierte Grafikdateien unn\xf6tig gro\xdf sind."),Object(a.b)("h3",{id:"vektorgrafiken"},"Vektorgrafiken"),Object(a.b)("p",null,"Vektorgrafiken eignen sich hervorragend f\xfcr Logos, Icons und \xe4hnliche Bilder. Der gro\xdfe Vorteil von Vektorgrafiken ist, dass sie beliebig skaliert werden k\xf6nnen, ohne dass sie verpixeln, wie das bei Rastergrafiken der Fall w\xe4re. Oft sind Vektorgrafikdateien um ein vielfaches kleiner als vergleichbare Rastergrafikdateien. Das einzige im Web verbreitet unterst\xfctzte Vektorgrafikvormat ist das XML-basierte SVG (",Object(a.b)("inlineCode",{parentName:"p"},"image/svg+xml"),")."),Object(a.b)("h2",{id:"text"},"Text"),Object(a.b)("p",null,"Textdateien sind im Allgemeinen Dateien, die in einem menschenlesbaren Format vorliegen: Source-Code, CSV-Daten, Markup-Sprachen, oder Textinhalte.\nDie f\xfcr das Web wichtigsten Formate sind:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"HTML (",Object(a.b)("inlineCode",{parentName:"li"},"text/html"),") f\xfcr HTML-Dokumente"),Object(a.b)("li",{parentName:"ul"},"CSS (",Object(a.b)("inlineCode",{parentName:"li"},"text/css"),") f\xfcr Stylesheets"),Object(a.b)("li",{parentName:"ul"},"Javascript (",Object(a.b)("inlineCode",{parentName:"li"},"text/javascript"),") f\xfcr Dateien, die JavaScript-Code beinhalten"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"text/plain"),' f\xfcr "normale" Textdateien, deren Inhalt nicht irgendwie gesondert intepretiert werden soll')),Object(a.b)("p",null,"Bei Textdateien kann noch optional mit dem ",Object(a.b)("inlineCode",{parentName:"p"},"charset"),"-Parameter angegeben werden, wie der Inhalt codiert ist: ",Object(a.b)("inlineCode",{parentName:"p"},"charset=utf-8"),". Diese Angabe f\xfchrt bei JavaScript-Dateien aber oft dazu, dass sie nicht geladen werden."),Object(a.b)("h2",{id:"mime-sniffing"},"MIME-Sniffing"),Object(a.b)("p",null,"Bei Webseiten sollte immer sichergestellt werden, dass Server den Browser \xfcber den korrekten Media Type informieren. Fehlt der Media Type allerdings oder hat der Browser Grund zur Annahme, dass der Media Type falsch ist, versucht er, den Media Type zu ",Object(a.b)("strong",{parentName:"p"},"erraten"),". Das wird als ",Object(a.b)("em",{parentName:"p"},"MIME-Sniffing")," bezeichnet und ist je nach Browser unterschiedlich implementiert. Der Browser kann z.B. aufgrund der Dateiendung, der ersten paar Bytes einer Datei oder aufgrund des Kontexts erraten, welcher Media Type vorliegt."))}c.isMDXComponent=!0},187:function(e,n,i){"use strict";i.d(n,"a",(function(){return b})),i.d(n,"b",(function(){return p}));var r=i(0),t=i.n(r);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function s(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?s(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,r,t=function(e,n){if(null==e)return{};var i,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var d=t.a.createContext({}),c=function(e){var n=t.a.useContext(d),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},b=function(e){var n=c(e.components);return t.a.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.a.createElement(t.a.Fragment,{},n)}},m=t.a.forwardRef((function(e,n){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),b=c(i),m=r,p=b["".concat(s,".").concat(m)]||b[m]||u[m]||a;return i?t.a.createElement(p,l(l({ref:n},d),{},{components:i})):t.a.createElement(p,l({ref:n},d))}));function p(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=i.length,s=new Array(a);s[0]=m;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var d=2;d<a;d++)s[d]=i[d];return t.a.createElement.apply(null,s)}return t.a.createElement.apply(null,i)}m.displayName="MDXCreateElement"}}]);