(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{153:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return b}));var r=t(2),i=t(9),a=(t(0),t(179)),l={id:"css-syntax",title:"Die Syntax von CSS",sidebar_label:"CSS Syntax"},s={id:"css-syntax",title:"Die Syntax von CSS",description:"Deklarationen",source:"@site/docs/css_syntax.mdx",permalink:"/webbasics/docs/css-syntax",editUrl:"https://github.com/michivo/webbasics/edit/master/website/docs/css_syntax.mdx",sidebar_label:"CSS Syntax",sidebar:"someSidebar",previous:{title:"Cascading Style Sheets",permalink:"/webbasics/docs/css-intro"},next:{title:"Das CSS Box-Model",permalink:"/webbasics/docs/css-box-model"}},c=[{value:"Deklarationen",id:"deklarationen",children:[]},{value:"Deklarationsbl\xf6cke",id:"deklarationsbl\xf6cke",children:[]},{value:"CSS-Regels\xe4tze",id:"css-regels\xe4tze",children:[{value:"Selektoren",id:"selektoren",children:[]}]},{value:"At-Regeln",id:"at-regeln",children:[{value:"@media",id:"media",children:[]},{value:"@supports",id:"supports",children:[]}]},{value:"Externes, internes und inline CSS",id:"externes-internes-und-inline-css",children:[]},{value:"Pr\xe4valenz von CSS-Regeln",id:"pr\xe4valenz-von-css-regeln",children:[]}],o={rightToc:c};function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},o,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"deklarationen"},"Deklarationen"),Object(a.b)("p",null,"CSS-Deklarationen bestehen stets aus einer Eigenschaft (wie zum Beispiel ",Object(a.b)("inlineCode",{parentName:"p"},"background-color")," f\xfcr die Hintergrundfarbe,\n",Object(a.b)("inlineCode",{parentName:"p"},"font-family")," f\xfcr die Schriftart oder ",Object(a.b)("inlineCode",{parentName:"p"},"border-width")," f\xfcr die Rahmenbreite) und einem Wert (z.B. ",Object(a.b)("inlineCode",{parentName:"p"},"red"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Arial")," oder ",Object(a.b)("inlineCode",{parentName:"p"},"1px"),")."),Object(a.b)("p",null,"Eine CSS-Deklaration besteht aus der Eigenschaft, gefolgt von einem Doppelpunkt und dem Wert:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-css"}),"background-color: red\n")),Object(a.b)("p",null,"Es gibt \xfcber 100 CSS-Eigenschaften."),Object(a.b)("h2",{id:"deklarationsbl\xf6cke"},"Deklarationsbl\xf6cke"),Object(a.b)("p",null,"Deklarationen werden in Bl\xf6cken zusammengefasst. Ein Block wird von geschwungenen Klammern umgeben, besteht dann aus einer oder mehreren\nDeklarationen, jeweils gefolgt von einem Strichpunkt:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-css"}),"{\n    background-color: red;\n    font-family: Helvetica, Arial, Sans-Serif;\n    border-width: 1px;\n}\n")),Object(a.b)("h2",{id:"css-regels\xe4tze"},"CSS-Regels\xe4tze"),Object(a.b)("p",null,"Ein CSS-Regelsatz definiert nun, auf welche Elemente ein Deklarationsblock angewendet werden soll. Ein Regelsatz besteht daher aus einem Selektor,\nder festlegt, worauf sich der Regelsatz bezieht, und einem Deklarationsblock, der definiert, welche Regeln angewendet werden sollen."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-css"}),"p.important, div.statement {\n    background-color: red;\n    font-family: Helvetica, Arial, Sans-Serif;\n    border-width: 1px;\n}\n")),Object(a.b)("p",null,"Dieser Block definiert, dass alle ",Object(a.b)("inlineCode",{parentName:"p"},"p"),"-Elemente, deren ",Object(a.b)("inlineCode",{parentName:"p"},"class"),"-Attribut den Wert ",Object(a.b)("inlineCode",{parentName:"p"},"important")," hat rot, mit Schriftart Helvetica (alternativ mit Arial bzw. einer generischen\nserifenlosen Schrift) und einem 1 Pixel breiten Rahmen dargestellt werden sollen. Dieselben Regeln gelten f\xfcr alle ",Object(a.b)("inlineCode",{parentName:"p"},"div"),"-Elemente,\nderen ",Object(a.b)("inlineCode",{parentName:"p"},"class"),"-Attribut den Wert ",Object(a.b)("inlineCode",{parentName:"p"},"statement")," haben."),Object(a.b)("h3",{id:"selektoren"},"Selektoren"),Object(a.b)("p",null,"TODO"),Object(a.b)("h2",{id:"at-regeln"},"At-Regeln"),Object(a.b)("p",null,"Zus\xe4tzlich zu den CSS-Regels\xe4tzen gibt es noch At-Regeln, die wichtigsten sind:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"@charset")," definiert den verwendeten Zeichensatz, z.B. ",Object(a.b)("inlineCode",{parentName:"li"},'@charset "utf-8;"')),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"@import")," zum Importieren externer Stylesheets, z.B. ",Object(a.b)("inlineCode",{parentName:"li"},'@import "custom.css";')," oder ",Object(a.b)("inlineCode",{parentName:"li"},"import url('landscape.css') screen and (orientation:landscape);")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"@font-face")," zum Importieren von Schriftarten, z.B. ",Object(a.b)("inlineCode",{parentName:"li"},'@font-face { font-family: MyHelvetica; src: local("Helvetica Neue Bold"), local("HelveticaNeue-Bold"), url(MgOpenModernaBold.ttf); font-weight: bold; }')),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"@keyframes")," f\xfcr Animationen, die separat behandelt werden"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"@page")," um spezielle Regeln f\xfcr Ausdrucke zu definieren, z.B. ",Object(a.b)("inlineCode",{parentName:"li"},"@page :first { margin: 2cm; }"))),Object(a.b)("p",null,"Weiters gibt es die etwas komplexeren Regeln ",Object(a.b)("inlineCode",{parentName:"p"},"@media")," und ",Object(a.b)("inlineCode",{parentName:"p"},"@supports"),":"),Object(a.b)("h3",{id:"media"},"@media"),Object(a.b)("p",null,"Mit der ",Object(a.b)("inlineCode",{parentName:"p"},"@media"),"-Regel k\xf6nnen ausgabemedienabh\xe4ngige Bedingungen definiert werden. Nur, wenn diese Bedingungen erf\xfcllt werden, werden auch die zugeh\xf6rigen Regels\xe4tze angewendet.\nSoll z.B. die Zeilenh\xf6he gr\xf6\xdfer gew\xe4hlt werden, wenn ein Benutzer eine Seite auf einem Bildschirm mit \xfcber 1200px Breite ansieht, kann das so definiert werden:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-css"}),"@media (width >= 1200px) {\n    body { line-height: 1.4; }\n}\n\n@media (800px <= width < 1200px) {\n    body { line-height: 1.2; }\n}\n")),Object(a.b)("p",null,"Eine umfassende Beschreibung der media-Queries gibt es bei ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@media"}),"Mozilla"),"."),Object(a.b)("h3",{id:"supports"},"@supports"),Object(a.b)("p",null,"Mit der ",Object(a.b)("inlineCode",{parentName:"p"},"@supports"),"-Regel k\xf6nnen Regels\xe4tze abh\xe4ngig von vom Browser unterst\xfctzten Features angewendet werden. M\xf6chte man zum Beispiel\nin Browsern, die das unterst\xfctzen, ein Grid-Layout verwenden, in allen anderen ein Flex-Layout (auf diese Art von Layouts werden wir\nnoch eingehen), kann das so formuliert werden:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-css"}),".layout {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n@supports (display: grid) {\n  .layout {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n    grid-gap: 2rem;\n  }\n}\n")),Object(a.b)("p",null,"Nachdem alle modernen Browser ein weitgehend gleiches Set von Features unterst\xfctzen, hat die @supports-Regel eine untergeordnete\nBedeutung.\nEine umfassende Beschreibung der supports-Queries gibt es bei ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@supports"}),"Mozilla"),"."),Object(a.b)("h2",{id:"externes-internes-und-inline-css"},"Externes, internes und inline CSS"),Object(a.b)("p",null,"Es gibt drei unterschiedliche M\xf6glichkeiten, CSS-Regeln zu definieren:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Externe CSS-Regeln werden in einer separaten CSS-Datei definiert. Diese Dateien werden im Header mit dem ",Object(a.b)("inlineCode",{parentName:"li"},"link"),"-Element eingebunden"),Object(a.b)("li",{parentName:"ul"},"Interne CSS-Regeln werden direkt im HTML-Head mit dem ",Object(a.b)("inlineCode",{parentName:"li"},"style"),"-Tag angegeben"),Object(a.b)("li",{parentName:"ul"},"Inline-CSS-Regeln, die bei beliebigen HTML-Elementen im Body im ",Object(a.b)("inlineCode",{parentName:"li"},"style"),"-Attribut angegeben werden. Inline-CSS-Regeln enthalten Deklarationsbl\xf6cke ohne die geschwungenen Klammern")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html>\n    <head>\n        <link rel="stylesheet" href="styles.css"> \x3c!-- externes Stylesheet styles.css --\x3e\n         \n        \x3c!-- hier kommt internes CSS --\x3e\n        <style>\n            p {\n                font-weight: bold;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>Hallo Welt</h1>\n        <p>Ein Absatz ohne gesonderte Stilinformationen.</p>\n        <p style="font-style: italic;">Das ist inline-CSS!</p>\n    </body>\n</html>\n')),Object(a.b)("h2",{id:"pr\xe4valenz-von-css-regeln"},"Pr\xe4valenz von CSS-Regeln"),Object(a.b)("p",null,"Wie gerade beschrieben gibt es mehrere M\xf6glichkeiten, CSS-Regeln zu definieren. Welche CSS-Regeln haben aber nun Vorrang? Angenommen, Sie haben folgende HTML-Datei:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html>\n    <head>\n        <link rel="stylesheet" href="styles.css"> \x3c!-- externes CSS enth\xe4lt Regel h1 { color: red; } --\x3e\n        <style>\n            h1 {\n                color: blue;\n            }\n        </style>\n    </head>\n    <body>\n        <h1 style="color: green;">Hallo Welt</h1>\n    </body>\n</html>\n')),Object(a.b)("p",null,'Welche Farbe hat dann die \xdcberschrift "Hallo Welt"? In diesem Fall hat die Inline-Regel Vorrang, die \xdcberschrift wird also gr\xfcn sein.\nOhne die Inline-Regel w\xe4re die \xdcberschrift blau, denn die sp\xe4ter im Header definierte Regel hat Vorrang gegen\xfcber davor definierter Regeln.\nDie Vorrangregeln f\xfcr CSS-Regeln sind also: '),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Inline-Regeln"),Object(a.b)("li",{parentName:"ol"},"Im Header definierte Regeln, wobei sp\xe4ter im Header angef\xfchrte Regeln Vorrang gegen\xfcber fr\xfcher angef\xfchrten Regeln haben und spezifische Regeln Vorrang haben gegen\xfcber allgemeinen Regeln."),Object(a.b)("li",{parentName:"ol"},"Browser-Standard-Werte")),Object(a.b)("p",null,"Zum Aushebeln dieses Regelwerks gibt es die M\xf6glichkeit, CSS-Regeln mit ",Object(a.b)("inlineCode",{parentName:"p"},"!important")," zu markieren. Solche Regeln haben immer Vorrang. ",Object(a.b)("inlineCode",{parentName:"p"},"!important")," sollte aber\nsehr sparsam eingesetzt werden, spezifischere Regeln und eine nachvollziehbare Reihenfolge der Styles sind stets zu bevorzugen:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-css"}),"div.warning {\n  background-color: red !important;\n}\n")))}b.isMDXComponent=!0},179:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=i.a.createContext({}),b=function(e){var n=i.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=b(e.components);return i.a.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},u=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),d=b(t),u=r,m=d["".concat(l,".").concat(u)]||d[u]||p[u]||a;return t?i.a.createElement(m,s(s({ref:n},o),{},{components:t})):i.a.createElement(m,s({ref:n},o))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var o=2;o<a;o++)l[o]=t[o];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);