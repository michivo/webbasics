(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{130:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return O}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),b=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=b(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},p=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=b(t),m=r,p=u["".concat(a,".").concat(m)]||u[m]||d[m]||o;return t?i.a.createElement(p,l(l({ref:n},s),{},{components:t})):i.a.createElement(p,l({ref:n},s))}));function O(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[m]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},89:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return b}));var r=t(3),i=t(7),o=(t(0),t(130)),a={id:"dom-tree",title:"Der DOM-Baum",sidebar_label:"DOM-Baum"},l={unversionedId:"dom-tree",id:"dom-tree",isDocsHomePage:!1,title:"Der DOM-Baum",description:"Hier noch einmal die Darstellung des DOM-Baums einer einfachen Webseite:",source:"@site/docs/dom_tree.md",slug:"/dom-tree",permalink:"/webbasics/docs/dom-tree",editUrl:"https://github.com/michivo/webbasics/edit/master/website/docs/dom_tree.md",version:"current",sidebar_label:"DOM-Baum",sidebar:"someSidebar",previous:{title:"Das Document Object Model",permalink:"/webbasics/docs/dom-intro"},next:{title:"Lernziele",permalink:"/webbasics/docs/dom-learnings"}},c=[{value:"Knotentypen",id:"knotentypen",children:[]}],s={toc:c};function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Hier noch einmal die Darstellung des DOM-Baums einer einfachen Webseite:\n(Quelle: ",Object(o.b)("a",{parentName:"p",href:"https://commons.wikimedia.org/wiki/File:DOM-model.svg"},"https://commons.wikimedia.org/wiki/File:DOM-model.svg"),", Autor: Birger Eriksson):\n",Object(o.b)("img",{parentName:"p",src:"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/DOM-model.svg/580px-DOM-model.svg.png",alt:"Beispiel-DOM einer Webseite"})),Object(o.b)("p",null,"Der DOM-Baum ist eine baumartige Repr\xe4sentation eines HTML-Dokuments. Die Wurzel des Baums ist\nder ",Object(o.b)("strong",{parentName:"p"},"Dokumentknoten"),". Der Dokumentknoten hat ein Kind, den ",Object(o.b)("strong",{parentName:"p"},"Elementknoten")," des HTML-Elements, der wiederum\nzwei Kinder hat: Die Elementknoten f\xfcr Body und Head."),Object(o.b)("h2",{id:"knotentypen"},"Knotentypen"),Object(o.b)("p",null,"Wie in der Abbildung zu sehen, gibt es unterschiedliche Knotentypen im DOM-Baum:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Den ",Object(o.b)("strong",{parentName:"li"},"Dokumentknoten")," als Wurzels des DOM-Baums"),Object(o.b)("li",{parentName:"ul"},"Den ",Object(o.b)("strong",{parentName:"li"},"Dokumenttypknoten"),", der in der Abbildung oben nicht dargestellt wird (f\xfcr die ",Object(o.b)("inlineCode",{parentName:"li"},"DOCTYPE"),"-Angabe)"),Object(o.b)("li",{parentName:"ul"},"F\xfcr jedes Element gibt es einen zugeh\xf6rigen ",Object(o.b)("strong",{parentName:"li"},"Elementknoten"),". Ein Elementknoten kann, je nach Element, ein oder mehrere weitere Elementknoten, Attributknoten oder Textknoten als Kinder haben"),Object(o.b)("li",{parentName:"ul"},"F\xfcr jedes Attribut gibt es einen ",Object(o.b)("strong",{parentName:"li"},"Attributknoten"),". Attributknoten k\xf6nnen keine weiteren Kinder haben."),Object(o.b)("li",{parentName:"ul"},"Textinhalte werden in ",Object(o.b)("strong",{parentName:"li"},"Textknoten")," abgelegt. Auch Textknoten k\xf6nnen keine weiteren Kinder haben."),Object(o.b)("li",{parentName:"ul"},"F\xfcr Kommentare gibt es ",Object(o.b)("strong",{parentName:"li"},"Kommentarknoten"),", die klarerweise auch keine Kinder haben")),Object(o.b)("p",null,"Auf ",Object(o.b)("a",{parentName:"p",href:"http://bioub.github.io/dom-visualizer/"},"http://bioub.github.io/dom-visualizer/")," gibt es ein Tool, das DOM-B\xe4ume einfacher Webseiten \xfcbersichtlich darstellt. Aber Vorsicht: DOM-B\xe4ume werden schnell sehr gro\xdf und komplex, eine Visualisierung dieser Art bietet sich wirklich nur bei sehr kleinen, einfachen Seiten an."))}b.isMDXComponent=!0}}]);