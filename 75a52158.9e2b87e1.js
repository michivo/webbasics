(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{159:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return b})),t.d(n,"default",(function(){return c}));var i=t(2),r=t(9),l=(t(0),t(186)),a={id:"css-syntax",title:"Die Syntax von CSS",sidebar_label:"Syntax"},s={id:"css-syntax",title:"Die Syntax von CSS",description:"Deklarationen",source:"@site/docs/css_syntax.mdx",permalink:"/webbasics/docs/css-syntax",editUrl:"https://github.com/michivo/webbasics/edit/master/website/docs/css_syntax.mdx",sidebar_label:"Syntax",sidebar:"someSidebar",previous:{title:"Cascading Style Sheets",permalink:"/webbasics/docs/css-intro"},next:{title:"Das CSS Box-Model",permalink:"/webbasics/docs/css-box-model"}},b=[{value:"Deklarationen",id:"deklarationen",children:[]},{value:"Deklarationsbl\xf6cke",id:"deklarationsbl\xf6cke",children:[]},{value:"CSS-Regels\xe4tze",id:"css-regels\xe4tze",children:[{value:"Selektoren",id:"selektoren",children:[]}]},{value:"At-Regeln",id:"at-regeln",children:[{value:"@media",id:"media",children:[]},{value:"@supports",id:"supports",children:[]}]},{value:"Externes, internes und inline CSS",id:"externes-internes-und-inline-css",children:[]},{value:"Pr\xe4valenz von CSS-Regeln",id:"pr\xe4valenz-von-css-regeln",children:[]}],o={rightToc:b};function c(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(i.a)({},o,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"deklarationen"},"Deklarationen"),Object(l.b)("p",null,"CSS-Deklarationen bestehen stets aus einer Eigenschaft (wie zum Beispiel ",Object(l.b)("inlineCode",{parentName:"p"},"background-color")," f\xfcr die Hintergrundfarbe,\n",Object(l.b)("inlineCode",{parentName:"p"},"font-family")," f\xfcr die Schriftart oder ",Object(l.b)("inlineCode",{parentName:"p"},"border-width")," f\xfcr die Rahmenbreite) und einem Wert (z.B. ",Object(l.b)("inlineCode",{parentName:"p"},"red"),", ",Object(l.b)("inlineCode",{parentName:"p"},"Arial")," oder ",Object(l.b)("inlineCode",{parentName:"p"},"1px"),")."),Object(l.b)("p",null,"Eine CSS-Deklaration besteht aus der Eigenschaft, gefolgt von einem Doppelpunkt und dem Wert:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"background-color: red\n")),Object(l.b)("p",null,"Es gibt \xfcber 100 CSS-Eigenschaften."),Object(l.b)("h2",{id:"deklarationsbl\xf6cke"},"Deklarationsbl\xf6cke"),Object(l.b)("p",null,"Deklarationen werden in Bl\xf6cken zusammengefasst. Ein Block wird von geschwungenen Klammern umgeben, besteht dann aus einer oder mehreren\nDeklarationen, jeweils gefolgt von einem Strichpunkt:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"{\n    background-color: red;\n    font-family: Helvetica, Arial, Sans-Serif;\n    border-width: 1px;\n}\n")),Object(l.b)("h2",{id:"css-regels\xe4tze"},"CSS-Regels\xe4tze"),Object(l.b)("p",null,"Ein CSS-Regelsatz definiert nun, auf welche Elemente ein Deklarationsblock angewendet werden soll. Ein Regelsatz besteht daher aus einem Selektor,\nder festlegt, worauf sich der Regelsatz bezieht, und einem Deklarationsblock, der definiert, welche Regeln angewendet werden sollen."),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"p.important, div.statement {\n    background-color: red;\n    font-family: Helvetica, Arial, Sans-Serif;\n    border-width: 1px;\n}\n")),Object(l.b)("p",null,"Dieser Block definiert, dass alle ",Object(l.b)("inlineCode",{parentName:"p"},"p"),"-Elemente, deren ",Object(l.b)("inlineCode",{parentName:"p"},"class"),"-Attribut den Wert ",Object(l.b)("inlineCode",{parentName:"p"},"important")," hat rot, mit Schriftart Helvetica (alternativ mit Arial bzw. einer generischen\nserifenlosen Schrift) und einem 1 Pixel breiten Rahmen dargestellt werden sollen. Dieselben Regeln gelten f\xfcr alle ",Object(l.b)("inlineCode",{parentName:"p"},"div"),"-Elemente,\nderen ",Object(l.b)("inlineCode",{parentName:"p"},"class"),"-Attribut den Wert ",Object(l.b)("inlineCode",{parentName:"p"},"statement")," haben."),Object(l.b)("h3",{id:"selektoren"},"Selektoren"),Object(l.b)("p",null,"Mit Selektoren kann festgelegt werden, auf welche Elemente CSS-Regels\xe4tze angewendet werden sollen. Wie vorhin beschrieben, wird mit Hilfe dieser Selektoren entschieden,\nwelche Knoten im DOM mit welchen Stilinformationen verkn\xfcpft werden:"),Object(l.b)("h4",{id:"universeller-selektor"},"Universeller Selektor"),Object(l.b)("p",null,"Der Universelle Selektor ",Object(l.b)("inlineCode",{parentName:"p"},"*")," selektiert alle Elemente des Dokuments. z.B.:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"* {\n    font-family: 'Comic Sans MS'\n}\n")),Object(l.b)("h4",{id:"typselektoren"},"Typselektoren"),Object(l.b)("p",null,"Typselektoren selektieren alle Elemente eines gewissen Typs, also z.B. alle ",Object(l.b)("inlineCode",{parentName:"p"},"h1"),"-Elemente, alle ",Object(l.b)("inlineCode",{parentName:"p"},"p"),"-Elemente, ... . Sie bestehen aus dem Elementnamen:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"h1 {\n    font-size: 16pt;\n    font-weight: 200;\n}\n")),Object(l.b)("h4",{id:"klassenselektoren"},"Klassenselektoren"),Object(l.b)("p",null,"Klassenselektoren selektieren alle Elemente gem\xe4\xdf dem Wert ihres ",Object(l.b)("inlineCode",{parentName:"p"},"class"),"-Attributs. Sie bestehen aus einem ",Object(l.b)("inlineCode",{parentName:"p"},".")," gefolgt vom Klassennamen. Oft werden\nsie auch kombiniert mit Typselektoren, die richtige Syntax daf\xfcr ist ",Object(l.b)("inlineCode",{parentName:"p"},"elementname.classname"),":"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),".warning {\n    color: orange;\n}\n\ndiv.error {\n    color: red;\n}\n")),Object(l.b)("h4",{id:"id-selektoren"},"ID-Selektoren"),Object(l.b)("p",null,"ID-Selektoren selektieren ein Element gem\xe4\xdf dem Wert des ",Object(l.b)("inlineCode",{parentName:"p"},"id"),"-Attributs. ID-Attribute sollten innerhalb eines Dokuments stets eindeutig sein.\nDiese Selektoren bestehen aus einem ",Object(l.b)("inlineCode",{parentName:"p"},"#")," gefolgt vom ID-Wert. Auch sie k\xf6nnen mit Elementnamen kombiniert werden, auch wenn das ob der\nEindeutigkeit des ID-Selektors nicht notwendig ist:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"#title {\n    font-size: larger;\n}\n")),Object(l.b)("h4",{id:"pseudoklassen"},"Pseudoklassen"),Object(l.b)("p",null,"Mit Pseudoklassen k\xf6nnen Elemente abh\xe4ngig von ihrem Zustand selektiert werden. Beispielsweise bei Links k\xf6nnen Links, die die",Object(l.b)("em",{parentName:"p"},"der Benutzer"),"in bereits besucht hat,\nanders dargestellt werden als solche, die noch nicht besucht wurden:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"a:visited {\n    color: slategray;\n}\n")),Object(l.b)("p",null,"Eine ausf\xfchrliche Dokumentation der Pseudoklassen finden Sie bei ",Object(l.b)("a",Object(i.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes"}),"Mozilla"),"."),Object(l.b)("h4",{id:"pseudoelemente"},"Pseudoelemente"),Object(l.b)("p",null,"Mit Pseudoelementen k\xf6nnen gewisse Teile einzelner Elemente selektiert werden, z.B. die erste Zeile oder ein fiktives Element vor oder nach einem Element."),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"a::after {\n    content: '>';\n}\n\np::first-line {\n    padding-left: 2rem;\n}\n")),Object(l.b)("p",null,"Eine ausf\xfchrliche Dokumentation der Pseudoelemente finden Sie bei ",Object(l.b)("a",Object(i.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements"}),"Mozilla"),"."),Object(l.b)("h4",{id:"attribut-selektoren"},"Attribut-Selektoren"),Object(l.b)("p",null,"Mit Attribut-Selektoren k\xf6nnen Elemente abh\xe4ngig von gewissen Attributwerten selektiert werden, so z.B.:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),'/* selektiert alle a-Elemente mit einem title-Attribut */\na[title] {\n    background-color: gray;\n}\n\n/* selektiert alle a-Elemente, die auf www.campus02.at verlinken */ \na[title="https://www.campus02.at"] {\n    font-size: 2rem;\n}\n')),Object(l.b)("p",null,"Eine ausf\xfchrliche Dokumentation der Attribut-Selektoren finden Sie bei ",Object(l.b)("a",Object(i.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors"}),"Mozilla"),"."),Object(l.b)("h4",{id:"selektoren-kombinieren"},"Selektoren kombinieren"),Object(l.b)("p",null,"Mehrere Selektoren k\xf6nnen auch kombiniert werden:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Selektoren k\xf6nnen gruppiert werden, indem sie durch Beistriche getrennt werden, z.B.: ",Object(l.b)("inlineCode",{parentName:"li"},"div, span.warning, p { ... }")),Object(l.b)("li",{parentName:"ul"},"Kind-Kombinationen k\xf6nnen verwendet werden, wenn Regeln auf direkte Kinder anderer Elemente angewendet werden sollen. Sollen z.B. alle ",Object(l.b)("inlineCode",{parentName:"li"},"li"),"-Elemente in ",Object(l.b)("inlineCode",{parentName:"li"},"ul"),"-Elementen selektiert werden, dann erfolgt dies mithilfe eines ",Object(l.b)("inlineCode",{parentName:"li"},">"),": ",Object(l.b)("inlineCode",{parentName:"li"},"ul > li")),Object(l.b)("li",{parentName:"ul"},"Nachkommen-Kombinationen k\xf6nnen verwendet werden, wenn Regeln auf alle ",Object(l.b)("em",{parentName:"li"},"Nachkommen")," (also Kinder, deren Kinder & Kindeskinder, ...) angewendet werden sollen. Dazu gibt man einfach ein Leerzeichen zwischen den Selektoren an: ",Object(l.b)("inlineCode",{parentName:"li"},"nav a")," selektiert alle ",Object(l.b)("inlineCode",{parentName:"li"},"a"),"-Elemente, die sich irgendwo in einem ",Object(l.b)("inlineCode",{parentName:"li"},"nav"),"-Element befinden"),Object(l.b)("li",{parentName:"ul"},"Geschwister-Kombinationen k\xf6nnen verwendet werden, wenn Regeln auf ",Object(l.b)("em",{parentName:"li"},"nachfolgende Geschwister")," angewendet werden sollen (also Elemente, die dieselben Eltern im DOM-Baum haben). Der Operator f\xfcr diese Kombinationen ist die ",Object(l.b)("inlineCode",{parentName:"li"},"~"),": ",Object(l.b)("inlineCode",{parentName:"li"},"p ~ span")," selektiert alle span-Elemente, die auf ein p-Element folgen und die gleichen Eltern haben."),Object(l.b)("li",{parentName:"ul"},"Nachbars-Geschwister-Kombinationen k\xf6nnen verwendet werden, wenn Regeln auf ",Object(l.b)("em",{parentName:"li"},"direkt nachfolgende Geschwister")," angewendet werden sollen, der Operator daf\xfcr ist das ",Object(l.b)("inlineCode",{parentName:"li"},"+"),": ",Object(l.b)("inlineCode",{parentName:"li"},"h2 + p")," selektiert alle p-Elemente, die direkt auf ein h2-Element folgen.")),Object(l.b)("h2",{id:"at-regeln"},"At-Regeln"),Object(l.b)("p",null,"Zus\xe4tzlich zu den CSS-Regels\xe4tzen gibt es noch At-Regeln, die wichtigsten sind:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@charset")," definiert den verwendeten Zeichensatz, z.B. ",Object(l.b)("inlineCode",{parentName:"li"},'@charset "utf-8;"')),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@import")," zum Importieren externer Stylesheets, z.B. ",Object(l.b)("inlineCode",{parentName:"li"},'@import "custom.css";')," oder ",Object(l.b)("inlineCode",{parentName:"li"},"import url('landscape.css') screen and (orientation:landscape);")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@font-face")," zum Importieren von Schriftarten, z.B. ",Object(l.b)("inlineCode",{parentName:"li"},'@font-face { font-family: MyHelvetica; src: local("Helvetica Neue Bold"), local("HelveticaNeue-Bold"), url(MgOpenModernaBold.ttf); font-weight: bold; }')),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@keyframes")," f\xfcr Animationen, die im Rahmen dieses Skriptums nicht behandelt werden. Mehr zu Animationen finden Sie u.a. bei ",Object(l.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations"}),"Mozilla")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@page")," um spezielle Regeln f\xfcr Ausdrucke zu definieren, z.B. ",Object(l.b)("inlineCode",{parentName:"li"},"@page :first { margin: 2cm; }"))),Object(l.b)("p",null,"Weiters gibt es die etwas komplexeren Regeln ",Object(l.b)("inlineCode",{parentName:"p"},"@media")," und ",Object(l.b)("inlineCode",{parentName:"p"},"@supports"),":"),Object(l.b)("h3",{id:"media"},"@media"),Object(l.b)("p",null,"Mit der ",Object(l.b)("inlineCode",{parentName:"p"},"@media"),"-Regel k\xf6nnen ausgabemedienabh\xe4ngige Bedingungen definiert werden. Nur, wenn diese Bedingungen erf\xfcllt werden, werden auch die zugeh\xf6rigen Regels\xe4tze angewendet.\nSoll z.B. die Zeilenh\xf6he gr\xf6\xdfer gew\xe4hlt werden, wenn ein Benutzer eine Seite auf einem Bildschirm mit \xfcber 1200px Breite ansieht, kann das so definiert werden:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"@media (width >= 1200px) {\n    body { line-height: 1.4; }\n}\n\n@media (800px <= width < 1200px) {\n    body { line-height: 1.2; }\n}\n")),Object(l.b)("p",null,"Eine umfassende Beschreibung der media-Queries gibt es bei ",Object(l.b)("a",Object(i.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@media"}),"Mozilla"),"."),Object(l.b)("h3",{id:"supports"},"@supports"),Object(l.b)("p",null,"Mit der ",Object(l.b)("inlineCode",{parentName:"p"},"@supports"),"-Regel k\xf6nnen Regels\xe4tze abh\xe4ngig von vom Browser unterst\xfctzten Features angewendet werden. M\xf6chte man zum Beispiel\nin Browsern, die das unterst\xfctzen, ein Grid-Layout verwenden, in allen anderen ein Flex-Layout (auf diese Art von Layouts werden wir\nnoch eingehen), kann das so formuliert werden:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),".layout {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n@supports (display: grid) {\n  .layout {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n    grid-gap: 2rem;\n  }\n}\n")),Object(l.b)("p",null,"Nachdem alle modernen Browser ein weitgehend gleiches Set von Features unterst\xfctzen, hat die @supports-Regel eine untergeordnete\nBedeutung.\nEine umfassende Beschreibung der supports-Queries gibt es bei ",Object(l.b)("a",Object(i.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@supports"}),"Mozilla"),"."),Object(l.b)("h2",{id:"externes-internes-und-inline-css"},"Externes, internes und inline CSS"),Object(l.b)("p",null,"Es gibt drei unterschiedliche M\xf6glichkeiten, CSS-Regeln zu definieren:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Externe CSS-Regeln werden in einer separaten CSS-Datei definiert. Diese Dateien werden im Header mit dem ",Object(l.b)("inlineCode",{parentName:"li"},"link"),"-Element eingebunden"),Object(l.b)("li",{parentName:"ul"},"Interne CSS-Regeln werden direkt im HTML-Head mit dem ",Object(l.b)("inlineCode",{parentName:"li"},"style"),"-Tag angegeben"),Object(l.b)("li",{parentName:"ul"},"Inline-CSS-Regeln, die bei beliebigen HTML-Elementen im Body im ",Object(l.b)("inlineCode",{parentName:"li"},"style"),"-Attribut angegeben werden. Inline-CSS-Regeln enthalten Deklarationsbl\xf6cke ohne die geschwungenen Klammern")),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html>\n    <head>\n        <link rel="stylesheet" href="styles.css"> \x3c!-- externes Stylesheet styles.css --\x3e\n         \n        \x3c!-- hier kommt internes CSS --\x3e\n        <style>\n            p {\n                font-weight: bold;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>Hallo Welt</h1>\n        <p>Ein Absatz ohne gesonderte Stilinformationen.</p>\n        <p style="font-style: italic;">Das ist inline-CSS!</p>\n    </body>\n</html>\n')),Object(l.b)("h2",{id:"pr\xe4valenz-von-css-regeln"},"Pr\xe4valenz von CSS-Regeln"),Object(l.b)("p",null,"Wie gerade beschrieben gibt es mehrere M\xf6glichkeiten, CSS-Regeln zu definieren. Welche CSS-Regeln haben aber nun Vorrang? Angenommen, Sie haben folgende HTML-Datei:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html>\n    <head>\n        <link rel="stylesheet" href="styles.css"> \x3c!-- externes CSS enth\xe4lt Regel h1 { color: red; } --\x3e\n        <style>\n            h1 {\n                color: blue;\n            }\n        </style>\n    </head>\n    <body>\n        <h1 style="color: green;">Hallo Welt</h1>\n    </body>\n</html>\n')),Object(l.b)("p",null,'Welche Farbe hat dann die \xdcberschrift "Hallo Welt"? In diesem Fall hat die Inline-Regel Vorrang, die \xdcberschrift wird also gr\xfcn sein.\nOhne die Inline-Regel w\xe4re die \xdcberschrift blau, denn die sp\xe4ter im Header definierte Regel hat Vorrang gegen\xfcber davor definierter Regeln.\nDie Vorrangregeln f\xfcr CSS-Regeln sind also: '),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Inline-Regeln"),Object(l.b)("li",{parentName:"ol"},"Im Header definierte Regeln, wobei sp\xe4ter im Header angef\xfchrte Regeln Vorrang gegen\xfcber fr\xfcher angef\xfchrten Regeln haben und spezifische Regeln Vorrang haben gegen\xfcber allgemeinen Regeln."),Object(l.b)("li",{parentName:"ol"},"Browser-Standard-Werte")),Object(l.b)("p",null,"Zum Aushebeln dieses Regelwerks gibt es die M\xf6glichkeit, CSS-Regeln mit ",Object(l.b)("inlineCode",{parentName:"p"},"!important")," zu markieren. Solche Regeln haben immer Vorrang. ",Object(l.b)("inlineCode",{parentName:"p"},"!important")," sollte aber\nsehr sparsam eingesetzt werden, spezifischere Regeln und eine nachvollziehbare Reihenfolge der Styles sind stets zu bevorzugen:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-css"}),"div.warning {\n  background-color: red !important;\n}\n")))}c.isMDXComponent=!0},186:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return u}));var i=t(0),r=t.n(i);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=r.a.createContext({}),c=function(e){var n=r.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=c(e.components);return r.a.createElement(o.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},p=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,a=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),d=c(t),p=i,u=d["".concat(a,".").concat(p)]||d[p]||m[p]||l;return t?r.a.createElement(u,s(s({ref:n},o),{},{components:t})):r.a.createElement(u,s({ref:n},o))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=p;var s={};for(var b in n)hasOwnProperty.call(n,b)&&(s[b]=n[b]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var o=2;o<l;o++)a[o]=t[o];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);